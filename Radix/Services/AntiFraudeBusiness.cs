using Entity;
using Services.Interfaces;
using Services.Util;
using System.Text;
using RestSharp;
using System;

namespace Services
{
    public class AntiFraudeBusiness : IAntiFraudeBusiness
    {
        public string Analisar(Pedido pedido)
        {
            string retorno = string.Empty;
            StringBuilder parametros = new StringBuilder();
            string preencher = "preencher";

            parametros.Append("{");
            parametros.AppendLine();
            parametros.Append("ApiKey:");
            parametros.Append(string.Format("\"{0}\",", pedido.TokenLoja));
            parametros.AppendLine();
            parametros.Append("LoginToken: ");
            parametros.Append(string.Format("\"{0}\",", pedido.TokenLoja));
            parametros.AppendLine();
            parametros.Append("Orders: [");
            parametros.AppendLine();
            parametros.Append("{");
            parametros.AppendLine();
            parametros.Append("ID: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Id));
            parametros.AppendLine();
            parametros.Append("Date: ");
            parametros.Append(string.Format("\"{0}\",", DateTime.Now));
            parametros.AppendLine();
            parametros.Append("Email: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Email));
            parametros.AppendLine();
            parametros.Append("TotalItems: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("TotalOrder: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("TotalShipping: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Valor));
            parametros.AppendLine();
            parametros.Append("IP: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("Currency: \"USD\",");
            parametros.AppendLine();
            parametros.Append("Payments: ");
            parametros.AppendLine();
            parametros.Append("[");
            parametros.AppendLine();
            parametros.Append("{");
            parametros.AppendLine();
            parametros.Append("Date: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("Type: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("CardNumber: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.CartaoDeCredito.Numero));
            parametros.AppendLine();
            parametros.Append("CardHolderName: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.CartaoDeCredito.Nome));
            parametros.AppendLine();
            parametros.Append("CardExpirationDate: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.CartaoDeCredito.Validade));
            parametros.AppendLine();
            parametros.Append("Amount: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("PaymentTypeID: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("CardType: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("CardBin: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("}");
            parametros.AppendLine();
            parametros.Append("],");
            parametros.AppendLine();
            parametros.Append("BillingData: ");
            parametros.AppendLine();
            parametros.Append("{");
            parametros.AppendLine();
            parametros.Append("ID: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("Type: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("BirthDate: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Nascimento));
            parametros.AppendLine();
            parametros.Append("Gender: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("Name: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Nome));
            parametros.AppendLine();
            parametros.Append("Email: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Email));
            parametros.AppendLine();
            parametros.Append("Address: ");
            parametros.AppendLine();
            parametros.Append("{");
            parametros.AppendLine();
            parametros.Append("Street: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Endreco.Rua));
            parametros.AppendLine();
            parametros.Append("City: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Endreco.Cidade));
            parametros.AppendLine();
            parametros.Append("State: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Endreco.Estado));
            parametros.AppendLine();
            parametros.Append("Comp: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Endreco.Complemento));
            parametros.AppendLine();
            parametros.Append("ZipCode: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Endreco.CEP));
            parametros.AppendLine();
            parametros.Append("County: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Endreco.Pais));
            parametros.AppendLine();
            parametros.Append("Number: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Endreco.Numero));
            parametros.AppendLine();
            parametros.Append("},");
            parametros.AppendLine();
            parametros.Append("Phones: [");
            parametros.AppendLine();
            parametros.Append("{");
            parametros.AppendLine();
            parametros.Append("Type: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("CountryCode: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("AreaCode: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("Number: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("}");
            parametros.AppendLine();
            parametros.Append("]");
            parametros.AppendLine();
            parametros.Append("},");
            parametros.AppendLine();
            parametros.Append("ShippingData: ");
            parametros.AppendLine();
            parametros.Append("{");
            parametros.AppendLine();
            parametros.Append("ID: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("Type: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("Name: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Nome));
            parametros.AppendLine();
            parametros.Append("Gender: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("Email: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Email));
            parametros.AppendLine();
            parametros.Append("BirthDate: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Nascimento));
            parametros.AppendLine();
            parametros.Append("Address: ");
            parametros.AppendLine();
            parametros.Append("{");
            parametros.AppendLine();
            parametros.Append("Street: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Endreco.Rua));
            parametros.AppendLine();
            parametros.Append("City: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Endreco.Cidade));
            parametros.AppendLine();
            parametros.Append("State: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Endreco.Estado));
            parametros.AppendLine();
            parametros.Append("Comp: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Endreco.Complemento));
            parametros.AppendLine();
            parametros.Append("ZipCode: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Endreco.CEP));
            parametros.AppendLine();
            parametros.Append("County: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Endreco.Pais));
            parametros.AppendLine();
            parametros.Append("Number: ");
            parametros.Append(string.Format("\"{0}\",", pedido.Cliente.Endreco.Numero));
            parametros.AppendLine();
            parametros.Append("},");
            parametros.AppendLine();
            parametros.Append("Phones: [");
            parametros.AppendLine();
            parametros.Append("{");
            parametros.AppendLine();
            parametros.Append("Type: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("CountryCode: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("AreaCode: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("Number: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("}");
            parametros.AppendLine();
            parametros.Append("]");
            parametros.AppendLine();
            parametros.Append("},");
            parametros.AppendLine();
            parametros.Append("Items: [");
            parametros.AppendLine();
            parametros.Append("{");
            parametros.AppendLine();
            parametros.Append("ProductId: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("ProductTitle: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("Price: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("Category: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("Quantity: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("},");
            parametros.AppendLine();
            parametros.Append("{");
            parametros.AppendLine();
            parametros.Append("ProductId: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("ProductTitle: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("Price: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("Category: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("Quantity: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("}");
            parametros.AppendLine();
            parametros.Append("],");
            parametros.AppendLine();
            parametros.Append("SessionID: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("}");
            parametros.AppendLine();
            parametros.Append("],");
            parametros.AppendLine();
            parametros.Append("AnalysisLocation: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("Reanalysis: ");
            parametros.Append(string.Format("\"{0}\",", preencher));
            parametros.AppendLine();
            parametros.Append("}");

            string json = JsonFormatting.Ident(parametros.ToString());

            var client = new RestClient("https://sandbox.clearsale.com.br/api/order/send");
            var request = new RestRequest(Method.POST);
            request.AddHeader("Postman-Token", "3d6e3cf9-d361-45eb-b53a-5a7d39c83736");
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddParameter("application/json", parametros, ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

            //return response.Content;

            return "APA";
        }
    }
}
